
@startuml
'https://plantuml.com/class-diagram


interface StateI<V=generic state variables> {
+ V getVariables();
+ set(StateI<V> state);
}




interface TrainerI<V=generic state variables> {
+ train()
}

abstract class TrainerA {
TrainingTracker tracker
TrainerParameters parameters
}

abstract class TrainerATBD {
    EnvironmentI<<V>> environment;
    Agent<<V>> agent;
}

interface EnvironmentI<V=generic state variables> {
+  StepReturn<<V>> step(StateI<<V>> state,int action);
'/ +  boolean isTerminalState(StateI<<V>> state);
}


EnvironmentI <|-- Environment1
EnvironmentI <|-- Environment2

TrainerI <|-- TrainerA
TrainerA <|-- TrainerTbdA
TrainerTbdA  <|-- Trainer1
TrainerTbdA  <|-- Trainer2

StateI -[hidden]- EnvironmentI
Environment1 -[hidden]- TrainerI


@enduml