@startuml
'https://plantuml.com/class-diagram

interface AgentInterface<V=generic state variables> {
+ int chooseAction(double probRandom)  //todo int generic
+ setState(StateInterface<<V>> state);
'/ + double readValue(StateInterface<<V>> state);  //todo needed?
}

interface AgentThetaActorInterface {
+ changeActor(change);
}

interface AgentNeuralActorInterface {
+ fitActor(in,out);
}

interface AgentNeuralActorCriticInterface {
+ fitActor(in,out);
+ fitCritic(in,value);
}

abstract class AgentAbstract {
'/    EnvironmentInterface<<V>> environment;
    StateInterface<<V>> state;
}

AgentInterface <|-- AgentAbstract
AgentInterface <|-- AgentThetaActorInterface
AgentInterface <|-- AgentNeuralActorInterface
AgentInterface <|-- AgentNeuralActorCriticInterface
AgentAbstract  <|-- Agent1
AgentAbstract  <|-- Agent2
AgentThetaActorInterface  <|-- Agent1
AgentNeuralActorInterface  <|-- Agent2

@enduml