@startuml
'https://plantuml.com/class-diagram


abstract class Environment {
FrameEnvironment frame
int W
int H
+ EnvironmentParametersAbstract getParameters();
+ StepReturnAbstract step(action, State state)
+ boolean isTerminalState(State state)
+ double clip(double variable, double minValue, double maxValue)
}

abstract class StepReturnAbstract  {
State state;
Double reward;
Boolean done;
 }

 abstract class EnvironmentParametersAbstract  {
 List<String> discreteStateVariableNames;
 List<String> continuousStateVariableNames;
 List<Integer> discreteActionsSpace;
  }


class StepReturn {
}

class EnvironmentParameters {
Environment specific paremeters
}

class SixRooms {
+ List<Integer> getFeasibleActions(State state)
}

class SixRooms_StateAsInteger {
}

class SixRooms_StateAsBinaryString {
}

class MountainCar {
}


Environment  <|-- SixRooms
Environment  <|-- MountainCar

SixRooms  <|-- SixRooms_StateAsInteger
SixRooms_StateAsInteger  <|-- SixRooms_StateAsBinaryString


StepReturnAbstract  <|-- StepReturn
EnvironmentParametersAbstract  <|-- EnvironmentParameters





@enduml