@startuml
'https://plantuml.com/class-diagram


interface Environment {
+ StepReturnAbstract step(action, State state)
+ boolean isTerminalState(State state)
}

abstract class StepReturnAbstract  {
State state;
Double reward;
Boolean done;
 }

 abstract class EnvironmentParametersAbstract  {
 List<String> discreteStateVariableNames;
 List<String> continuousStateVariableNames;
 List<Integer> discreteActionsSpace;
  }


class StepReturn {
}

class EnvironmentParameters {
List<Integer> stateSpace;
double R_FAIL, R_MOVE, R_EXIT;
double GAMMA, ALPHA
double[][] R;


}

class FiveRooms {
+ boolean isTerminalState(State state);
+ List<Integer> getFeasibleActions(State state)

}

class State {
Map<String,Integer> discreteVariables
Map<String,Double> continuousVariables

+createVariable(name,value)
+setVariable(name,value)
+getVariable(name)
+List<String> getVariableNames()
+String toString()
}


Environment  <|-- FiveRooms


FiveRooms *-- StepReturn
FiveRooms *-- EnvironmentParameters

StepReturnAbstract  <|-- StepReturn
EnvironmentParametersAbstract  <|-- EnvironmentParameters

interface Agent {
    + chooseBestAction(State state);
    + findMaxQ(State state);
    + chooseRandomAction(List<Integer> aSet);
    + writeMemory(State oldState, Integer Action, Double value);
    + readMemory(State state, int Action);
}

class FiveRoomsAgentTabular {
State state;
double[][] Qsa;
FiveRooms.EnvironmentParameters envParams;
}

class FiveRoomsAgentNeuralNetwork {
State state;
MultiLayerNetwork network;
}

Agent  <|-- FiveRoomsAgentTabular
Agent  <|-- FiveRoomsAgentNeuralNetwork



@enduml