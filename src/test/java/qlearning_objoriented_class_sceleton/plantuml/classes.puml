@startuml
'https://plantuml.com/class-diagram


interface Environment {
+ StepReturnAbstract step(action, State state)
'+ State reset()
}

abstract class StepReturnAbstract  {
State state;
Double reward;
Boolean done;
 }

 abstract class EnvironmentParametersAbstract  {
 List<String> discreteStateVariableNames;
 List<String> continuousStateVariableNames;
 List<Integer> discreteActionsSpace;
  }


class StepReturn {
}

class EnvironmentParameters {
}

class FiveRooms {

}

class State {
Map<String,Integer> discreteVariables
Map<String,Double> continuousVariables

+createVariable(name,value)
+setVariable(name,value)
+getVariable(name)
+List<String> getVariableNames()
+String toString()
}



Environment  <|-- FiveRooms


FiveRooms *-- StepReturn
FiveRooms *-- EnvironmentParameters

StepReturnAbstract  <|-- StepReturn
EnvironmentParametersAbstract  <|-- EnvironmentParameters

interface Agent {
+ int chooseAction(State state, DiscreteActionSpace)
+ updateMemory(State oldState, StepReturn)
+ double[] readMemory(State state)
}

class FiveRoomsAgentTabular {
State state;
double[][] Qsa;
}

class FiveRoomsAgentNeuralNetwork {
State state;
MultiLayerNetwork network;
}

Agent  <|-- FiveRoomsAgentTabular
Agent  <|-- FiveRoomsAgentNeuralNetwork



@enduml