
TestForkEnvironment x
AgentTabular  x
TestAgentTabular  x
TestNstepTD x
NStepTDHelper x
låta PROB_RANDOM minska med episod x
snygga upp TestNstepTD  x
ScalerLogarithmic   x
klass NStepEpisodeRunner  x
TestNStepEpisodeRunner  x
påvisa större n ger snabbare konvergens  x

input vec length = antal states  x
AgentHelper  x
AgentNetwork x
TestAgentForkNeural  x
AgentForkNeural learn  x
NStepNeuralAgentTrainer - getMiniBatch  x
NStepNeuralAgentTrainer - setValuesInExperiencesInMiniBatch  x
NStepNeuralAgentTrainer - trainAgentFromExperiencesInMiniBatch x
TestNStepNeuralAgentTrainer x
Uppdatera nn varje steg  x
cvarför låser sig ibland  - behöver clip, learningRate viktigt x
ForkNeuralValueMemory konstruktor  x
studera några episoder så verkligen korrekt experience  x
ändra steps - studera epis x
value = 0 ibland  x
newDefault snyggare x
setValuesInExperiencesInMiniBatch - discount hänsyn  x
testa olika discount TestNStepNeuralAgentTrainer  x

clean up
generisc state
Annan miljö - tex Maze

ide om två nn minnen - ett med större intervall med terminal fail fokus
för ovan testa ide grovt på mockad data på nät


ev target network


NstepExperience(stateToUpdate=5, sumOfRewards=10.0, stateToBackupFrom=-1, isBackupStatePresent=false, value=10.0)
NstepExperience(stateToUpdate=7, sumOfRewards=10.0, stateToBackupFrom=-1, isBackupStatePresent=false, value=10.0)
NstepExperience(stateToUpdate=8, sumOfRewards=10.0, stateToBackupFrom=-1, isBackupStatePresent=false, value=0.0)
NstepExperience(stateToUpdate=9, sumOfRewards=10.0, stateToBackupFrom=-1, isBackupStatePresent=false, value=10.0)

NstepExperience(stateToUpdate=5, sumOfRewards=10.0, stateToBackupFrom=-1, isBackupStatePresent=false, value=0.0)
NstepExperience(stateToUpdate=7, sumOfRewards=10.0, stateToBackupFrom=-1, isBackupStatePresent=false, value=0.0)
NstepExperience(stateToUpdate=8, sumOfRewards=10.0, stateToBackupFrom=-1, isBackupStatePresent=false, value=0.0)
NstepExperience(stateToUpdate=9, sumOfRewards=10.0, stateToBackupFrom=-1, isBackupStatePresent=false, value=0.0)